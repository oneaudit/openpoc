{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2021-42694",
      "description": "An issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-42694",
      "reportURL": "https://github.com/js-on/CVE-2021-42694",
      "timeStamp": "2021-11-02T20:39:47Z"
    },
    {
      "id": "CVE-2021-42694",
      "description": "An issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-42694",
      "reportURL": "https://github.com/simplylu/CVE-2021-42694",
      "timeStamp": "2021-11-02T20:39:47Z"
    },
    {
      "id": "CVE-2021-42694",
      "description": "An issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-42694",
      "reportURL": "https://www.scyon.nl/post/trojans-in-your-source-code",
      "timeStamp": "2021-11-29T17:23:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2021-42694",
      "url": "https://github.com/hffaust/CVE-2021-42574_and_CVE-2021-42694",
      "added_at": "2022-02-11T12:00:27Z"
    },
    {
      "id": "CVE-2021-42694",
      "url": "https://github.com/js-on/CVE-2021-42694",
      "added_at": "2022-02-11T12:00:27Z"
    },
    {
      "id": "CVE-2021-42694",
      "url": "https://github.com/simplylu/CVE-2021-42694",
      "added_at": "2022-02-11T12:00:27Z"
    }
  ],
  "nomisec": [
    {
      "cveId": "CVE-2021-42694",
      "id": 423992286,
      "name": "CVE-2021-42694",
      "full_name": "simplylu/CVE-2021-42694",
      "owner": {
        "login": "simplylu",
        "id": 55274241,
        "avatar_url": "https://avatars.githubusercontent.com/u/55274241?v=4",
        "html_url": "https://github.com/simplylu",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/simplylu/CVE-2021-42694",
      "description": "Generate malicious files using recently published homoglyphic-attack (CVE-2021-42694)",
      "fork": false,
      "created_at": "2021-11-02T20:39:47Z",
      "updated_at": "2025-02-06T13:01:20Z",
      "pushed_at": "2023-05-23T19:49:04Z",
      "stargazers_count": 18,
      "watchers_count": 18,
      "has_discussions": false,
      "forks_count": 10,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 10,
      "watchers": 18,
      "score": 0,
      "subscribers_count": 1
    }
  ],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2021-42694",
      "url": "https://github.com/hffaust/CVE-2021-42574_and_CVE-2021-42694",
      "added_at": "2022-02-11T12:00:27Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-42694",
      "url": "https://github.com/js-on/CVE-2021-42694",
      "added_at": "2021-11-02T20:39:47Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-42694",
      "url": "https://github.com/simplylu/CVE-2021-42694",
      "added_at": "2021-11-02T20:39:47Z",
      "score": 0.18,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-42694",
      "url": "https://www.scyon.nl/post/trojans-in-your-source-code",
      "added_at": "2021-11-29T17:23:00Z",
      "score": 0,
      "template_for": ""
    }
  ]
}
