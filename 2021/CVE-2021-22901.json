{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2021-22901",
      "description": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-22901",
      "reportURL": "https://curl.se/docs/CVE-2021-22901.html",
      "timeStamp": "2021-07-30T14:15:00Z"
    },
    {
      "id": "CVE-2021-22901",
      "description": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-22901",
      "reportURL": "https://hackerone.com/reports/1180380",
      "timeStamp": "2021-07-30T14:15:00Z"
    }
  ],
  "trickest": [],
  "nomisec": [],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2021-22901",
      "url": "https://curl.se/docs/CVE-2021-22901.html",
      "added_at": "2021-07-30T14:15:00Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-22901",
      "url": "https://hackerone.com/reports/1180380",
      "added_at": "2021-07-30T14:15:00Z",
      "score": 0.7,
      "template_for": ""
    }
  ]
}
