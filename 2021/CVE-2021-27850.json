{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2021-27850",
      "description": "A critical unauthenticated remote code execution vulnerability was found all recent versions of Apache Tapestry. The affected versions include 5.4.5, 5.5.0, 5.6.2 and 5.7.0. The vulnerability I have found is a bypass of the fix for CVE-2019-0195. Recap: Before the fix of CVE-2019-0195 it was possible to download arbitrary class files from the classpath by providing a crafted asset file URL. An attacker was able to download the file `AppModule.class` by requesting the URL `http://localhost:8080/assets/something/services/AppModule.class` which contains a HMAC secret key. The fix for that bug was a blacklist filter that checks if the URL ends with `.class`, `.properties` or `.xml`. Bypass: Unfortunately, the blacklist solution can simply be bypassed by appending a `/` at the end of the URL: `http://localhost:8080/assets/something/services/AppModule.class/` The slash is stripped after the blacklist check and the file `AppModule.class` is loaded into the response. This class usually contains the HMAC secret key which is used to sign serialized Java objects. With the knowledge of that key an attacker can sign a Java gadget chain that leads to RCE (e.g. CommonsBeanUtils1 from ysoserial). Solution for this vulnerability: * For Apache Tapestry 5.4.0 to 5.6.1, upgrade to 5.6.2 or later. * For Apache Tapestry 5.7.0, upgrade to 5.7.1 or later.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-27850",
      "reportURL": "https://github.com/Ovi3/CVE_2021_27850_POC",
      "timeStamp": "2021-07-02T10:21:58Z"
    },
    {
      "id": "CVE-2021-27850",
      "description": "A critical unauthenticated remote code execution vulnerability was found all recent versions of Apache Tapestry. The affected versions include 5.4.5, 5.5.0, 5.6.2 and 5.7.0. The vulnerability I have found is a bypass of the fix for CVE-2019-0195. Recap: Before the fix of CVE-2019-0195 it was possible to download arbitrary class files from the classpath by providing a crafted asset file URL. An attacker was able to download the file `AppModule.class` by requesting the URL `http://localhost:8080/assets/something/services/AppModule.class` which contains a HMAC secret key. The fix for that bug was a blacklist filter that checks if the URL ends with `.class`, `.properties` or `.xml`. Bypass: Unfortunately, the blacklist solution can simply be bypassed by appending a `/` at the end of the URL: `http://localhost:8080/assets/something/services/AppModule.class/` The slash is stripped after the blacklist check and the file `AppModule.class` is loaded into the response. This class usually contains the HMAC secret key which is used to sign serialized Java objects. With the knowledge of that key an attacker can sign a Java gadget chain that leads to RCE (e.g. CommonsBeanUtils1 from ysoserial). Solution for this vulnerability: * For Apache Tapestry 5.4.0 to 5.6.1, upgrade to 5.6.2 or later. * For Apache Tapestry 5.7.0, upgrade to 5.7.1 or later.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-27850",
      "reportURL": "https://github.com/dorkerdevil/CVE-2021-27850_POC",
      "timeStamp": "2021-06-26T14:16:00Z"
    },
    {
      "id": "CVE-2021-27850",
      "description": "A critical unauthenticated remote code execution vulnerability was found all recent versions of Apache Tapestry. The affected versions include 5.4.5, 5.5.0, 5.6.2 and 5.7.0. The vulnerability I have found is a bypass of the fix for CVE-2019-0195. Recap: Before the fix of CVE-2019-0195 it was possible to download arbitrary class files from the classpath by providing a crafted asset file URL. An attacker was able to download the file `AppModule.class` by requesting the URL `http://localhost:8080/assets/something/services/AppModule.class` which contains a HMAC secret key. The fix for that bug was a blacklist filter that checks if the URL ends with `.class`, `.properties` or `.xml`. Bypass: Unfortunately, the blacklist solution can simply be bypassed by appending a `/` at the end of the URL: `http://localhost:8080/assets/something/services/AppModule.class/` The slash is stripped after the blacklist check and the file `AppModule.class` is loaded into the response. This class usually contains the HMAC secret key which is used to sign serialized Java objects. With the knowledge of that key an attacker can sign a Java gadget chain that leads to RCE (e.g. CommonsBeanUtils1 from ysoserial). Solution for this vulnerability: * For Apache Tapestry 5.4.0 to 5.6.1, upgrade to 5.6.2 or later. * For Apache Tapestry 5.7.0, upgrade to 5.7.1 or later.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-27850",
      "reportURL": "https://github.com/kahla-sec/CVE-2021-27850_POC",
      "timeStamp": "2021-06-25T13:55:41Z"
    },
    {
      "id": "CVE-2021-27850",
      "description": "A critical unauthenticated remote code execution vulnerability was found all recent versions of Apache Tapestry. The affected versions include 5.4.5, 5.5.0, 5.6.2 and 5.7.0. The vulnerability I have found is a bypass of the fix for CVE-2019-0195. Recap: Before the fix of CVE-2019-0195 it was possible to download arbitrary class files from the classpath by providing a crafted asset file URL. An attacker was able to download the file `AppModule.class` by requesting the URL `http://localhost:8080/assets/something/services/AppModule.class` which contains a HMAC secret key. The fix for that bug was a blacklist filter that checks if the URL ends with `.class`, `.properties` or `.xml`. Bypass: Unfortunately, the blacklist solution can simply be bypassed by appending a `/` at the end of the URL: `http://localhost:8080/assets/something/services/AppModule.class/` The slash is stripped after the blacklist check and the file `AppModule.class` is loaded into the response. This class usually contains the HMAC secret key which is used to sign serialized Java objects. With the knowledge of that key an attacker can sign a Java gadget chain that leads to RCE (e.g. CommonsBeanUtils1 from ysoserial). Solution for this vulnerability: * For Apache Tapestry 5.4.0 to 5.6.1, upgrade to 5.6.2 or later. * For Apache Tapestry 5.7.0, upgrade to 5.7.1 or later.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-27850",
      "reportURL": "https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/gather/cve_2021_27850_apache_tapestry_hmac_key.rb",
      "timeStamp": "2021-08-27T17:15:33Z"
    },
    {
      "id": "CVE-2021-27850",
      "description": "A critical unauthenticated remote code execution vulnerability was found all recent versions of Apache Tapestry. The affected versions include 5.4.5, 5.5.0, 5.6.2 and 5.7.0. The vulnerability I have found is a bypass of the fix for CVE-2019-0195. Recap: Before the fix of CVE-2019-0195 it was possible to download arbitrary class files from the classpath by providing a crafted asset file URL. An attacker was able to download the file `AppModule.class` by requesting the URL `http://localhost:8080/assets/something/services/AppModule.class` which contains a HMAC secret key. The fix for that bug was a blacklist filter that checks if the URL ends with `.class`, `.properties` or `.xml`. Bypass: Unfortunately, the blacklist solution can simply be bypassed by appending a `/` at the end of the URL: `http://localhost:8080/assets/something/services/AppModule.class/` The slash is stripped after the blacklist check and the file `AppModule.class` is loaded into the response. This class usually contains the HMAC secret key which is used to sign serialized Java objects. With the knowledge of that key an attacker can sign a Java gadget chain that leads to RCE (e.g. CommonsBeanUtils1 from ysoserial). Solution for this vulnerability: * For Apache Tapestry 5.4.0 to 5.6.1, upgrade to 5.6.2 or later. * For Apache Tapestry 5.7.0, upgrade to 5.7.1 or later.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-27850",
      "reportURL": "https://www.openwall.com/lists/oss-security/2021/04/15/1",
      "timeStamp": "2021-06-02T15:15:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2021-27850",
      "url": "https://github.com/NyxAzrael/Goby_POC",
      "added_at": "2022-02-11T12:00:27Z"
    },
    {
      "id": "CVE-2021-27850",
      "url": "https://github.com/dorkerdevil/CVE-2021-27850_POC",
      "added_at": "2022-02-11T12:00:27Z"
    },
    {
      "id": "CVE-2021-27850",
      "url": "https://github.com/kahla-sec/CVE-2021-27850_POC",
      "added_at": "2022-02-11T12:00:27Z"
    },
    {
      "id": "CVE-2021-27850",
      "url": "https://github.com/n0-traces/cve_monitor",
      "added_at": "2022-02-11T12:00:27Z"
    },
    {
      "id": "CVE-2021-27850",
      "url": "https://github.com/novysodope/CVE-2021-27850",
      "added_at": "2022-02-11T12:00:27Z"
    }
  ],
  "nomisec": [
    {
      "cveId": "CVE-2021-27850",
      "id": 382309693,
      "name": "CVE_2021_27850_POC",
      "full_name": "Ovi3/CVE_2021_27850_POC",
      "owner": {
        "login": "Ovi3",
        "id": 29408109,
        "avatar_url": "https://avatars.githubusercontent.com/u/29408109?v=4",
        "html_url": "https://github.com/Ovi3",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/Ovi3/CVE_2021_27850_POC",
      "description": "Apache Tapestry CVE-2021-27850 PoC",
      "fork": false,
      "created_at": "2021-07-02T10:21:58Z",
      "updated_at": "2024-06-07T22:14:37Z",
      "pushed_at": "2021-07-02T10:22:46Z",
      "stargazers_count": 2,
      "watchers_count": 2,
      "has_discussions": false,
      "forks_count": 2,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 2,
      "watchers": 2,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2021-27850",
      "id": 380518926,
      "name": "CVE-2021-27850_POC",
      "full_name": "dorkerdevil/CVE-2021-27850_POC",
      "owner": {
        "login": "dorkerdevil",
        "id": 15796745,
        "avatar_url": "https://avatars.githubusercontent.com/u/15796745?v=4",
        "html_url": "https://github.com/dorkerdevil",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/dorkerdevil/CVE-2021-27850_POC",
      "description": "A Proof of concept for CVE-2021-27850 affecting Apache Tapestry and leading to unauthencticated remote code execution.",
      "fork": false,
      "created_at": "2021-06-26T14:16:00Z",
      "updated_at": "2024-08-12T20:14:16Z",
      "pushed_at": "2021-06-25T14:23:45Z",
      "stargazers_count": 3,
      "watchers_count": 3,
      "has_discussions": false,
      "forks_count": 17,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 17,
      "watchers": 3,
      "score": 0,
      "subscribers_count": 0
    },
    {
      "cveId": "CVE-2021-27850",
      "id": 380253996,
      "name": "CVE-2021-27850_POC",
      "full_name": "kahla-sec/CVE-2021-27850_POC",
      "owner": {
        "login": "kahla-sec",
        "id": 53152235,
        "avatar_url": "https://avatars.githubusercontent.com/u/53152235?v=4",
        "html_url": "https://github.com/kahla-sec",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/kahla-sec/CVE-2021-27850_POC",
      "description": "A Proof of concept for CVE-2021-27850 affecting Apache Tapestry and leading to unauthencticated remote code execution.",
      "fork": false,
      "created_at": "2021-06-25T13:55:41Z",
      "updated_at": "2024-09-09T01:12:20Z",
      "pushed_at": "2023-01-03T13:46:34Z",
      "stargazers_count": 5,
      "watchers_count": 5,
      "has_discussions": false,
      "forks_count": 2,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 2,
      "watchers": 5,
      "score": 0,
      "subscribers_count": 2
    },
    {
      "cveId": "CVE-2021-27850",
      "id": 511347007,
      "name": "CVE-2021-27850",
      "full_name": "novysodope/CVE-2021-27850",
      "owner": {
        "login": "novysodope",
        "id": 45167857,
        "avatar_url": "https://avatars.githubusercontent.com/u/45167857?v=4",
        "html_url": "https://github.com/novysodope",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/novysodope/CVE-2021-27850",
      "description": "CVE-2021-27850 ysoserial",
      "fork": false,
      "created_at": "2022-07-07T01:42:44Z",
      "updated_at": "2022-07-07T01:42:44Z",
      "pushed_at": "2022-07-07T01:44:00Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 2
    }
  ],
  "nuclei": [
    {
      "cveId": "CVE-2021-27850",
      "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-27850.yaml",
      "template_path": "http/cves/2021/CVE-2021-27850.yaml",
      "added_at": "2023-04-27T09:58:59Z"
    }
  ],
  "metasploit": [
    {
      "cveId": "CVE-2021-27850",
      "url": "https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/gather/cve_2021_27850_apache_tapestry_hmac_key.rb",
      "template_path": "modules/auxiliary/gather/cve_2021_27850_apache_tapestry_hmac_key.rb",
      "added_at": "2021-07-21T17:56:41Z"
    }
  ],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/NyxAzrael/Goby_POC",
      "added_at": "2022-02-11T12:00:27Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/Ovi3/CVE_2021_27850_POC",
      "added_at": "2021-07-02T10:21:58Z",
      "score": 0.42,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/dorkerdevil/CVE-2021-27850_POC",
      "added_at": "2021-06-26T14:16:00Z",
      "score": 0.43,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/kahla-sec/CVE-2021-27850_POC",
      "added_at": "2021-06-25T13:55:41Z",
      "score": 0.45,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/n0-traces/cve_monitor",
      "added_at": "2022-02-11T12:00:27Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/novysodope/CVE-2021-27850",
      "added_at": "2022-02-11T12:00:27Z",
      "score": 0.4,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/http/cves/2021/CVE-2021-27850.yaml",
      "added_at": "2023-04-27T09:58:59Z",
      "score": 1,
      "template_for": "nuclei"
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/gather/cve_2021_27850_apache_tapestry_hmac_key.rb",
      "added_at": "2021-07-21T17:56:41Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-27850",
      "url": "https://www.openwall.com/lists/oss-security/2021/04/15/1",
      "added_at": "2021-06-02T15:15:00Z",
      "score": 0.7,
      "template_for": ""
    }
  ]
}
