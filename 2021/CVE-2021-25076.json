{
  "exploitdb": [
    {
      "cve": "CVE-2021-25076",
      "id": "50772",
      "file": "exploits/php/webapps/50772.py",
      "description": "WordPress Plugin WP User Frontend 3.5.25 - SQLi (Authenticated)",
      "author": "Ron Jost",
      "application_url": "http://www.exploit-db.comwp-user-frontend.3.5.25.zip",
      "source_url": "",
      "screenshot": "",
      "verified": false,
      "codes": "CVE-2021-25076",
      "tags": "",
      "type": "webapps",
      "platform": "php",
      "port": "",
      "aliases": "",
      "date_added": "2022-02-21T00:00:00Z",
      "date_updated": "2022-02-21T00:00:00Z",
      "date_published": "2022-02-21T00:00:00Z"
    }
  ],
  "itw": [
    {
      "id": "CVE-2021-25076",
      "description": "The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-25076",
      "reportURL": "https://github.com/0xAbbarhSF/CVE-2021-25076",
      "timeStamp": "2022-06-04T21:22:10Z"
    },
    {
      "id": "CVE-2021-25076",
      "description": "The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-25076",
      "reportURL": "https://packetstormsecurity.com/files/166071/WordPress-WP-User-Frontend-3.5.25-SQL-Injection.html",
      "timeStamp": "2022-03-18T21:02:00Z"
    },
    {
      "id": "CVE-2021-25076",
      "description": "The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-25076",
      "reportURL": "https://wpscan.com/vulnerability/6d3eeba6-5560-4380-a6e9-f008a9112ac6",
      "timeStamp": "2022-01-28T16:25:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2021-25076",
      "url": "https://github.com/0xAbbarhSF/CVE-2021-25076",
      "added_at": "2022-02-20T20:17:34Z"
    },
    {
      "id": "CVE-2021-25076",
      "url": "https://github.com/0xStarFord/CVE-2021-25076",
      "added_at": "2022-02-20T20:17:34Z"
    },
    {
      "id": "CVE-2021-25076",
      "url": "https://packetstormsecurity.com/files/166071/WordPress-WP-User-Frontend-3.5.25-SQL-Injection.html",
      "added_at": "2022-02-20T20:17:34Z"
    },
    {
      "id": "CVE-2021-25076",
      "url": "https://wpscan.com/vulnerability/6d3eeba6-5560-4380-a6e9-f008a9112ac6",
      "added_at": "2022-02-20T20:17:34Z"
    }
  ],
  "nomisec": [
    {
      "cveId": "CVE-2021-25076",
      "id": 499939338,
      "name": "CVE-2021-25076",
      "full_name": "0xAbbarhSF/CVE-2021-25076",
      "owner": {
        "login": "0xAbbarhSF",
        "id": 67552744,
        "avatar_url": "https://avatars.githubusercontent.com/u/67552744?v=4",
        "html_url": "https://github.com/0xAbbarhSF",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/0xAbbarhSF/CVE-2021-25076",
      "description": "Wordpress Plugin WP User Frontend \u003c 3.5.26 - SQL-Injection (Authenticated)",
      "fork": false,
      "created_at": "2022-06-04T21:22:10Z",
      "updated_at": "2023-09-28T11:39:25Z",
      "pushed_at": "2022-06-04T21:24:22Z",
      "stargazers_count": 3,
      "watchers_count": 3,
      "has_discussions": false,
      "forks_count": 1,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "2021-2022",
        "cve",
        "exploit",
        "wordpress"
      ],
      "visibility": "public",
      "forks": 1,
      "watchers": 3,
      "score": 0,
      "subscribers_count": 1
    }
  ],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2021-25076",
      "url": "https://github.com/0xAbbarhSF/CVE-2021-25076",
      "added_at": "2022-02-20T20:17:34Z",
      "score": 0.03,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-25076",
      "url": "https://github.com/0xStarFord/CVE-2021-25076",
      "added_at": "2022-02-20T20:17:34Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-25076",
      "url": "https://packetstormsecurity.com/files/166071/WordPress-WP-User-Frontend-3.5.25-SQL-Injection.html",
      "added_at": "2022-02-20T20:17:34Z",
      "score": 0.4,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-25076",
      "url": "https://wpscan.com/vulnerability/6d3eeba6-5560-4380-a6e9-f008a9112ac6",
      "added_at": "2022-01-28T16:25:00Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2021-25076",
      "url": "https://www.exploit-db.com/exploits/50772",
      "added_at": "2022-02-21T00:00:00Z",
      "score": 0.5,
      "template_for": ""
    }
  ]
}
