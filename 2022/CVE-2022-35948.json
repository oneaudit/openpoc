{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2022-35948",
      "description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=\u003c undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-35948",
      "reportURL": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3",
      "timeStamp": "2022-08-16T16:53:00Z"
    }
  ],
  "trickest": [],
  "nomisec": [],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2022-35948",
      "url": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3",
      "added_at": "2022-08-16T16:53:00Z",
      "score": 0.4,
      "template_for": ""
    }
  ]
}
