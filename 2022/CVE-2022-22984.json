{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYK-3038622",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625",
      "timeStamp": "2022-12-02T18:59:00Z"
    },
    {
      "id": "CVE-2022-22984",
      "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984",
      "reportURL": "https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680",
      "timeStamp": "2022-12-02T18:59:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2022-22984",
      "url": "https://github.com/PenteraIO/CVE-2022-22948",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYK-3038622",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625",
      "added_at": "2022-11-30T18:39:02Z"
    },
    {
      "id": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680",
      "added_at": "2022-11-30T18:39:02Z"
    }
  ],
  "nomisec": [],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2022-22984",
      "url": "https://github.com/PenteraIO/CVE-2022-22948",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYK-3038622",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2022-22984",
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680",
      "added_at": "2022-11-30T18:39:02Z",
      "score": 0.7,
      "template_for": ""
    }
  ]
}
