{
  "exploitdb": [
    {
      "cve": "CVE-2020-1938",
      "id": "48143",
      "file": "exploits/multiple/webapps/48143.py",
      "description": "Apache Tomcat - AJP 'Ghostcat File Read/Inclusion",
      "author": "YDHCUI",
      "application_url": "",
      "source_url": "https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi/blob/8bd38f4cf22331ecf4e48096a78c5931509c26be/CNVD-2020-10487-Tomcat-Ajp-lfi.py",
      "screenshot": "",
      "verified": false,
      "codes": "CVE-2020-1938",
      "tags": "",
      "type": "webapps",
      "platform": "multiple",
      "port": "",
      "aliases": "",
      "date_added": "2020-02-27T00:00:00Z",
      "date_updated": "2020-03-02T00:00:00Z",
      "date_published": "2020-02-20T00:00:00Z"
    },
    {
      "cve": "CVE-2020-1938",
      "id": "49039",
      "file": "exploits/multiple/webapps/49039.rb",
      "description": "Apache Tomcat - AJP 'Ghostcat' File Read/Inclusion (Metasploit)",
      "author": "SunCSR",
      "application_url": "",
      "source_url": "",
      "screenshot": "",
      "verified": true,
      "codes": "CVE-2020-1938",
      "tags": "",
      "type": "webapps",
      "platform": "multiple",
      "port": "",
      "aliases": "",
      "date_added": "2020-11-13T00:00:00Z",
      "date_updated": "2020-11-13T00:00:00Z",
      "date_published": "2020-11-13T00:00:00Z"
    }
  ],
  "itw": [
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/00theway/Ghostcat-CNVD-2020-10487",
      "timeStamp": "2020-02-22T16:16:20Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/DaemonShao/CVE-2020-1938",
      "timeStamp": "2020-02-21T04:34:40Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/Hancheng-Lei/Hacking-Vulnerability-CVE-2020-1938-Ghostcat",
      "timeStamp": "2021-03-28T03:30:44Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/Just1ceP4rtn3r/CVE-2020-1938-Tool",
      "timeStamp": "2020-03-20T09:29:18Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/YounesTasra-R4z3rSw0rd/CVE-2020-1938",
      "timeStamp": "2022-08-21T15:44:45Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/bkfish/CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner",
      "timeStamp": "2020-02-20T21:00:15Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/dacade/CVE-2020-1938",
      "timeStamp": "2020-02-21T09:56:19Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/delsadan/CNVD-2020-10487-Bulk-verification",
      "timeStamp": "2020-02-22T13:25:57Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/doggycheng/CNVD-2020-10487",
      "timeStamp": "2020-03-27T08:33:28Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/fairyming/CVE-2020-1938",
      "timeStamp": "2020-02-21T08:42:50Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/fatal0/tomcat-cve-2020-1938-check",
      "timeStamp": "2020-02-21T17:24:45Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/h7hac9/CVE-2020-1938",
      "timeStamp": "2020-02-21T04:34:40Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/laolisafe/CVE-2020-1938",
      "timeStamp": "2020-02-21T02:36:37Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/lizhianyuguangming/TomcatScanPro",
      "timeStamp": "2024-08-29T06:38:16Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/lizhianyuguangming/TomcatWeakPassChecker",
      "timeStamp": "2024-08-29T06:38:16Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/nibiwodong/CNVD-2020-10487-Tomcat-ajp-POC",
      "timeStamp": "2020-02-20T17:57:54Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/admin/http/tomcat_ghostcat.rb",
      "timeStamp": "2021-08-27T17:15:33Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/sgdream/CVE-2020-1938",
      "timeStamp": "2020-02-20T17:12:14Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read",
      "timeStamp": "2020-02-21T07:48:50Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/tpt11fb/AttackTomcat",
      "timeStamp": "2022-11-13T11:01:41Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/w4fz5uck5/CVE-2020-1938-Clean-Version",
      "timeStamp": "2020-03-01T01:45:23Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/woaiqiukui/CVE-2020-1938TomcatAjpScanner",
      "timeStamp": "2020-02-21T14:55:40Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/xindongzhuaizhuai/CVE-2020-1938",
      "timeStamp": "2020-02-20T17:00:02Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://github.com/ze0r/GhostCat-LFI-exp",
      "timeStamp": "2020-02-22T05:17:09Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://lists.apache.org/thread.html/rad36ec6a1ffc9e43266b030c22ceeea569243555d34fb4187ff08522%40%3Cnotifications.ofbiz.apache.org%3E",
      "timeStamp": "2024-07-24T14:23:00Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://www.chaitin.cn/en/ghostcat",
      "timeStamp": "2020-06-26T00:00:00Z"
    },
    {
      "id": "CVE-2020-1938",
      "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2020-1938",
      "reportURL": "https://www.exploit-db.com/exploits/48143",
      "timeStamp": "2020-02-20T00:00:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/DaemonShao/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/GhostTroops/TOP",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/Hancheng-Lei/Hacking-Vulnerability-CVE-2020-1938-Ghostcat",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/I-Runtime-Error/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/Just1ceP4rtn3r/CVE-2020-1938-Tool",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/Mr-xn/Penetration_Testing_POC",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/Neko-chanQwQ/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/NyxAzrael/Goby_POC",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/Threekiii/Awesome-POC",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/WHtig3r/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/YounesTasra-R4z3rSw0rd/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/Zaziki1337/Ghostcat-CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/acodervic/CVE-2020-1938-MSF-MODULE",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/dacade/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/einzbernnn/CVE-2020-1938Scan",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/fairyming/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/h7hac9/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/hopsypopsy8/CVE-2020-1938-Exploitation",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/laolisafe/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/n0-traces/cve_monitor",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/qazbnm456/awesome-cve-poc",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/s3nd3rjz/poc-CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/sgdream/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/streghstreek/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/technicalcorp2/CVE-2020-1938-Exploit",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/w4fz5uck5/CVE-2020-1938-Clean-Version",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/woaiqiukui/CVE-2020-1938TomcatAjpScanner",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2020-1938",
      "url": "https://github.com/xindongzhuaizhuai/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z"
    }
  ],
  "nomisec": [
    {
      "cveId": "CVE-2020-1938",
      "id": 242371713,
      "name": "Ghostcat-CNVD-2020-10487",
      "full_name": "00theway/Ghostcat-CNVD-2020-10487",
      "owner": {
        "login": "00theway",
        "id": 25681235,
        "avatar_url": "https://avatars.githubusercontent.com/u/25681235?v=4",
        "html_url": "https://github.com/00theway",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/00theway/Ghostcat-CNVD-2020-10487",
      "description": "Ghostcat read file/code execute,CNVD-2020-10487(CVE-2020-1938) ",
      "fork": false,
      "created_at": "2020-02-22T16:16:20Z",
      "updated_at": "2025-04-24T13:20:36Z",
      "pushed_at": "2020-03-09T14:51:43Z",
      "stargazers_count": 386,
      "watchers_count": 386,
      "has_discussions": false,
      "forks_count": 113,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "ajp",
        "cnvd-2020-10487",
        "cve-2020-1938",
        "exp",
        "ghostcat"
      ],
      "visibility": "public",
      "forks": 113,
      "watchers": 386,
      "score": 0,
      "subscribers_count": 4
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 352232354,
      "name": "Hacking-Vulnerability-CVE-2020-1938-Ghostcat",
      "full_name": "Hancheng-Lei/Hacking-Vulnerability-CVE-2020-1938-Ghostcat",
      "owner": {
        "login": "Hancheng-Lei",
        "id": 71180118,
        "avatar_url": "https://avatars.githubusercontent.com/u/71180118?v=4",
        "html_url": "https://github.com/Hancheng-Lei",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/Hancheng-Lei/Hacking-Vulnerability-CVE-2020-1938-Ghostcat",
      "description": "",
      "fork": false,
      "created_at": "2021-03-28T03:30:44Z",
      "updated_at": "2025-04-27T23:01:56Z",
      "pushed_at": "2022-11-27T06:14:19Z",
      "stargazers_count": 16,
      "watchers_count": 16,
      "has_discussions": false,
      "forks_count": 8,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 8,
      "watchers": 16,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 263382958,
      "name": "CVE-2020-1938",
      "full_name": "I-Runtime-Error/CVE-2020-1938",
      "owner": {
        "login": "I-Runtime-Error",
        "id": 61103825,
        "avatar_url": "https://avatars.githubusercontent.com/u/61103825?v=4",
        "html_url": "https://github.com/I-Runtime-Error",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/I-Runtime-Error/CVE-2020-1938",
      "description": "This is about CVE-2020-1938",
      "fork": false,
      "created_at": "2020-05-12T15:54:28Z",
      "updated_at": "2020-05-12T17:08:36Z",
      "pushed_at": "2020-05-12T17:08:34Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 248716444,
      "name": "CVE-2020-1938-Tool",
      "full_name": "Just1ceP4rtn3r/CVE-2020-1938-Tool",
      "owner": {
        "login": "Just1ceP4rtn3r",
        "id": 49367740,
        "avatar_url": "https://avatars.githubusercontent.com/u/49367740?v=4",
        "html_url": "https://github.com/Just1ceP4rtn3r",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/Just1ceP4rtn3r/CVE-2020-1938-Tool",
      "description": "批量检测幽灵猫漏洞",
      "fork": false,
      "created_at": "2020-03-20T09:29:18Z",
      "updated_at": "2024-08-12T19:59:02Z",
      "pushed_at": "2020-03-20T09:37:54Z",
      "stargazers_count": 3,
      "watchers_count": 3,
      "has_discussions": false,
      "forks_count": 2,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 2,
      "watchers": 3,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 280544880,
      "name": "ghostcatch",
      "full_name": "MateoSec/ghostcatch",
      "owner": {
        "login": "MateoSec",
        "id": 68019458,
        "avatar_url": "https://avatars.githubusercontent.com/u/68019458?v=4",
        "html_url": "https://github.com/MateoSec",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/MateoSec/ghostcatch",
      "description": "Disables AJP connectors to remediate CVE-2020-1938!",
      "fork": false,
      "created_at": "2020-07-17T23:34:47Z",
      "updated_at": "2020-07-18T00:06:32Z",
      "pushed_at": "2020-07-18T00:06:30Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 384971364,
      "name": "CVE-2020-1938",
      "full_name": "Neko-chanQwQ/CVE-2020-1938",
      "owner": {
        "login": "Neko-chanQwQ",
        "id": 83222283,
        "avatar_url": "https://avatars.githubusercontent.com/u/83222283?v=4",
        "html_url": "https://github.com/Neko-chanQwQ",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/Neko-chanQwQ/CVE-2020-1938",
      "description": "Scanner for CVE-2020-1938",
      "fork": false,
      "created_at": "2021-07-11T14:38:21Z",
      "updated_at": "2021-09-11T06:43:54Z",
      "pushed_at": "2021-07-15T14:13:10Z",
      "stargazers_count": 1,
      "watchers_count": 1,
      "has_discussions": false,
      "forks_count": 1,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 1,
      "watchers": 1,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 263413091,
      "name": "Ghostcat",
      "full_name": "Umesh2807/Ghostcat",
      "owner": {
        "login": "Umesh2807",
        "id": 65098320,
        "avatar_url": "https://avatars.githubusercontent.com/u/65098320?v=4",
        "html_url": "https://github.com/Umesh2807",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/Umesh2807/Ghostcat",
      "description": "CVE-2020-1938 exploit",
      "fork": false,
      "created_at": "2020-05-12T18:03:59Z",
      "updated_at": "2024-08-12T20:01:25Z",
      "pushed_at": "2020-05-12T18:09:37Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 3,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 3,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 845028851,
      "name": "CVE-2020-1938",
      "full_name": "WHtig3r/CVE-2020-1938",
      "owner": {
        "login": "WHtig3r",
        "id": 122340070,
        "avatar_url": "https://avatars.githubusercontent.com/u/122340070?v=4",
        "html_url": "https://github.com/WHtig3r",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/WHtig3r/CVE-2020-1938",
      "description": "",
      "fork": false,
      "created_at": "2024-08-20T12:51:06Z",
      "updated_at": "2024-11-04T09:25:13Z",
      "pushed_at": "2024-08-20T13:05:49Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 786312450,
      "name": "cve-2020-1938",
      "full_name": "Warelock/cve-2020-1938",
      "owner": {
        "login": "Warelock",
        "id": 87372454,
        "avatar_url": "https://avatars.githubusercontent.com/u/87372454?v=4",
        "html_url": "https://github.com/Warelock",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/Warelock/cve-2020-1938",
      "description": "cve-2020-1938 Tomcat-Ajp-lfi.git脚本",
      "fork": false,
      "created_at": "2024-04-14T04:10:41Z",
      "updated_at": "2024-05-19T07:27:34Z",
      "pushed_at": "2024-04-14T05:32:49Z",
      "stargazers_count": 2,
      "watchers_count": 2,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 2,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 527251116,
      "name": "CVE-2020-1938",
      "full_name": "YounesTasra-R4z3rSw0rd/CVE-2020-1938",
      "owner": {
        "login": "YounesTasra-R4z3rSw0rd",
        "id": 101610095,
        "avatar_url": "https://avatars.githubusercontent.com/u/101610095?v=4",
        "html_url": "https://github.com/YounesTasra-R4z3rSw0rd",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/YounesTasra-R4z3rSw0rd/CVE-2020-1938",
      "description": "This is a modified version of the original GhostCat Exploit",
      "fork": false,
      "created_at": "2022-08-21T15:44:45Z",
      "updated_at": "2023-04-16T17:29:07Z",
      "pushed_at": "2022-08-21T15:49:16Z",
      "stargazers_count": 3,
      "watchers_count": 3,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 3,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 334802810,
      "name": "CVE-2020-1938-MSF-MODULE",
      "full_name": "acodervic/CVE-2020-1938-MSF-MODULE",
      "owner": {
        "login": "acodervic",
        "id": 57204004,
        "avatar_url": "https://avatars.githubusercontent.com/u/57204004?v=4",
        "html_url": "https://github.com/acodervic",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/acodervic/CVE-2020-1938-MSF-MODULE",
      "description": "Modified version of auxiliary/admin/http/tomcat_ghostcat, it can  Read any file",
      "fork": false,
      "created_at": "2021-02-01T01:59:17Z",
      "updated_at": "2021-02-03T06:01:40Z",
      "pushed_at": "2021-02-01T02:10:07Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 241988804,
      "name": "CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner",
      "full_name": "bkfish/CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner",
      "owner": {
        "login": "bkfish",
        "id": 38547290,
        "avatar_url": "https://avatars.githubusercontent.com/u/38547290?v=4",
        "html_url": "https://github.com/bkfish",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/bkfish/CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner",
      "description": "Cnvd-2020-10487 / cve-2020-1938, scanner tool",
      "fork": false,
      "created_at": "2020-02-20T21:00:15Z",
      "updated_at": "2025-04-03T15:21:38Z",
      "pushed_at": "2021-11-26T07:40:35Z",
      "stargazers_count": 293,
      "watchers_count": 293,
      "has_discussions": false,
      "forks_count": 96,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 96,
      "watchers": 293,
      "score": 0,
      "subscribers_count": 8
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242107452,
      "name": "CVE-2020-1938",
      "full_name": "dacade/CVE-2020-1938",
      "owner": {
        "login": "dacade",
        "id": 31815137,
        "avatar_url": "https://avatars.githubusercontent.com/u/31815137?v=4",
        "html_url": "https://github.com/dacade",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/dacade/CVE-2020-1938",
      "description": "",
      "fork": false,
      "created_at": "2020-02-21T09:56:19Z",
      "updated_at": "2024-11-27T11:31:15Z",
      "pushed_at": "2020-02-28T07:08:16Z",
      "stargazers_count": 9,
      "watchers_count": 9,
      "has_discussions": false,
      "forks_count": 8,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 8,
      "watchers": 9,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242345920,
      "name": "CNVD-2020-10487-Bulk-verification",
      "full_name": "delsadan/CNVD-2020-10487-Bulk-verification",
      "owner": {
        "login": "delsadan",
        "id": 22538623,
        "avatar_url": "https://avatars.githubusercontent.com/u/22538623?v=4",
        "html_url": "https://github.com/delsadan",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/delsadan/CNVD-2020-10487-Bulk-verification",
      "description": "CNVD-2020-10487 OR CVE-2020-1938 批量验证脚本，批量验证，并自动截图，方便提交及复核",
      "fork": false,
      "created_at": "2020-02-22T13:25:57Z",
      "updated_at": "2024-08-12T19:58:00Z",
      "pushed_at": "2020-02-24T08:18:02Z",
      "stargazers_count": 3,
      "watchers_count": 3,
      "has_discussions": false,
      "forks_count": 5,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 5,
      "watchers": 3,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 250481242,
      "name": "CNVD-2020-10487",
      "full_name": "doggycheng/CNVD-2020-10487",
      "owner": {
        "login": "doggycheng",
        "id": 42572366,
        "avatar_url": "https://avatars.githubusercontent.com/u/42572366?v=4",
        "html_url": "https://github.com/doggycheng",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/doggycheng/CNVD-2020-10487",
      "description": "CVE-2020-1938 / CNVD-2020-1048 Detection Tools",
      "fork": false,
      "created_at": "2020-03-27T08:33:28Z",
      "updated_at": "2024-08-12T19:59:20Z",
      "pushed_at": "2020-03-31T07:17:04Z",
      "stargazers_count": 8,
      "watchers_count": 8,
      "has_discussions": false,
      "forks_count": 6,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 6,
      "watchers": 8,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 414844036,
      "name": "CVE-2020-1938Scan",
      "full_name": "einzbernnn/CVE-2020-1938Scan",
      "owner": {
        "login": "einzbernnn",
        "id": 77831842,
        "avatar_url": "https://avatars.githubusercontent.com/u/77831842?v=4",
        "html_url": "https://github.com/einzbernnn",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/einzbernnn/CVE-2020-1938Scan",
      "description": "-H 192.168.1.1-192.168.5.255",
      "fork": false,
      "created_at": "2021-10-08T04:20:43Z",
      "updated_at": "2021-11-09T08:43:47Z",
      "pushed_at": "2021-11-02T09:28:04Z",
      "stargazers_count": 1,
      "watchers_count": 1,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 1,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 938272888,
      "name": "Apache-Tomcat-Ghostcat-Vulnerability",
      "full_name": "erickrr-bd/Apache-Tomcat-Ghostcat-Vulnerability",
      "owner": {
        "login": "erickrr-bd",
        "id": 77643346,
        "avatar_url": "https://avatars.githubusercontent.com/u/77643346?v=4",
        "html_url": "https://github.com/erickrr-bd",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/erickrr-bd/Apache-Tomcat-Ghostcat-Vulnerability",
      "description": "Apache Tomcat vulnerable to Ghostcat (CVE-2020-1938).",
      "fork": false,
      "created_at": "2025-02-24T17:34:21Z",
      "updated_at": "2025-02-24T19:51:18Z",
      "pushed_at": "2025-02-24T19:51:14Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242093081,
      "name": "CVE-2020-1938",
      "full_name": "fairyming/CVE-2020-1938",
      "owner": {
        "login": "fairyming",
        "id": 44915879,
        "avatar_url": "https://avatars.githubusercontent.com/u/44915879?v=4",
        "html_url": "https://github.com/fairyming",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/fairyming/CVE-2020-1938",
      "description": "在一定条件下可执行命令",
      "fork": false,
      "created_at": "2020-02-21T08:42:50Z",
      "updated_at": "2025-04-27T01:36:37Z",
      "pushed_at": "2020-02-21T08:45:51Z",
      "stargazers_count": 11,
      "watchers_count": 11,
      "has_discussions": false,
      "forks_count": 11,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 11,
      "watchers": 11,
      "score": 0,
      "subscribers_count": 2
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242193832,
      "name": "tomcat-cve-2020-1938-check",
      "full_name": "fatal0/tomcat-cve-2020-1938-check",
      "owner": {
        "login": "fatal0",
        "id": 6017581,
        "avatar_url": "https://avatars.githubusercontent.com/u/6017581?v=4",
        "html_url": "https://github.com/fatal0",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/fatal0/tomcat-cve-2020-1938-check",
      "description": "",
      "fork": false,
      "created_at": "2020-02-21T17:24:45Z",
      "updated_at": "2024-08-12T19:57:58Z",
      "pushed_at": "2020-02-25T08:55:09Z",
      "stargazers_count": 7,
      "watchers_count": 7,
      "has_discussions": false,
      "forks_count": 4,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 4,
      "watchers": 7,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242054816,
      "name": "CVE-2020-1938",
      "full_name": "h7hac9/CVE-2020-1938",
      "owner": {
        "login": "h7hac9",
        "id": 24861334,
        "avatar_url": "https://avatars.githubusercontent.com/u/24861334?v=4",
        "html_url": "https://github.com/h7hac9",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/h7hac9/CVE-2020-1938",
      "description": "",
      "fork": false,
      "created_at": "2020-02-21T04:34:40Z",
      "updated_at": "2024-08-12T19:57:57Z",
      "pushed_at": "2020-02-21T04:40:38Z",
      "stargazers_count": 2,
      "watchers_count": 2,
      "has_discussions": false,
      "forks_count": 1,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 1,
      "watchers": 2,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 933190067,
      "name": "CVE-2020-1938-Exploitation",
      "full_name": "hopsypopsy8/CVE-2020-1938-Exploitation",
      "owner": {
        "login": "hopsypopsy8",
        "id": 79120728,
        "avatar_url": "https://avatars.githubusercontent.com/u/79120728?v=4",
        "html_url": "https://github.com/hopsypopsy8",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/hopsypopsy8/CVE-2020-1938-Exploitation",
      "description": "",
      "fork": false,
      "created_at": "2025-02-15T11:19:53Z",
      "updated_at": "2025-02-16T00:03:31Z",
      "pushed_at": "2025-02-16T00:03:28Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 396080591,
      "name": "ghostcat",
      "full_name": "jptr218/ghostcat",
      "owner": {
        "login": "jptr218",
        "id": 84092766,
        "avatar_url": "https://avatars.githubusercontent.com/u/84092766?v=4",
        "html_url": "https://github.com/jptr218",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/jptr218/ghostcat",
      "description": "An implementation of CVE-2020-1938",
      "fork": false,
      "created_at": "2021-08-14T17:32:51Z",
      "updated_at": "2021-08-14T18:21:04Z",
      "pushed_at": "2021-08-14T18:21:02Z",
      "stargazers_count": 1,
      "watchers_count": 1,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 1,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242038197,
      "name": "CVE-2020-1938",
      "full_name": "laolisafe/CVE-2020-1938",
      "owner": {
        "login": "laolisafe",
        "id": 45027935,
        "avatar_url": "https://avatars.githubusercontent.com/u/45027935?v=4",
        "html_url": "https://github.com/laolisafe",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/laolisafe/CVE-2020-1938",
      "description": "CVE-2020-1938漏洞复现",
      "fork": false,
      "created_at": "2020-02-21T02:36:37Z",
      "updated_at": "2024-08-12T19:57:57Z",
      "pushed_at": "2020-02-21T02:49:57Z",
      "stargazers_count": 37,
      "watchers_count": 37,
      "has_discussions": false,
      "forks_count": 10,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 10,
      "watchers": 37,
      "score": 0,
      "subscribers_count": 2
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 849195359,
      "name": "TomcatScanPro",
      "full_name": "lizhianyuguangming/TomcatScanPro",
      "owner": {
        "login": "lizhianyuguangming",
        "id": 81677104,
        "avatar_url": "https://avatars.githubusercontent.com/u/81677104?v=4",
        "html_url": "https://github.com/lizhianyuguangming",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/lizhianyuguangming/TomcatScanPro",
      "description": "tomcat自动化漏洞扫描利用工具，支持批量弱口令检测、后台部署war包getshell、CVE-2017-12615 文件上传、CVE-2020-1938/CNVD-2020-10487 文件包含",
      "fork": false,
      "created_at": "2024-08-29T06:38:16Z",
      "updated_at": "2025-04-29T07:03:31Z",
      "pushed_at": "2025-04-06T11:53:34Z",
      "stargazers_count": 232,
      "watchers_count": 232,
      "has_discussions": false,
      "forks_count": 22,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "hacker",
        "hackertools",
        "penetration-testing-tools",
        "scan",
        "scanner-web",
        "tomcat",
        "tools"
      ],
      "visibility": "public",
      "forks": 22,
      "watchers": 232,
      "score": 0,
      "subscribers_count": 2
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 241943142,
      "name": "CVE-2020-1938",
      "full_name": "sgdream/CVE-2020-1938",
      "owner": {
        "login": "sgdream",
        "id": 35300959,
        "avatar_url": "https://avatars.githubusercontent.com/u/35300959?v=4",
        "html_url": "https://github.com/sgdream",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/sgdream/CVE-2020-1938",
      "description": "CVE-2020-1938",
      "fork": false,
      "created_at": "2020-02-20T17:12:14Z",
      "updated_at": "2024-08-12T19:57:56Z",
      "pushed_at": "2020-02-20T16:54:45Z",
      "stargazers_count": 2,
      "watchers_count": 2,
      "has_discussions": false,
      "forks_count": 91,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 91,
      "watchers": 2,
      "score": 0,
      "subscribers_count": 0
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 243285368,
      "name": "ghostcat-verification",
      "full_name": "shaunmclernon/ghostcat-verification",
      "owner": {
        "login": "shaunmclernon",
        "id": 54109164,
        "avatar_url": "https://avatars.githubusercontent.com/u/54109164?v=4",
        "html_url": "https://github.com/shaunmclernon",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/shaunmclernon/ghostcat-verification",
      "description": "Learnings on how to verify if vulnerable to Ghostcat (aka CVE-2020-1938)",
      "fork": false,
      "created_at": "2020-02-26T14:40:12Z",
      "updated_at": "2024-08-12T19:58:08Z",
      "pushed_at": "2020-02-26T15:33:58Z",
      "stargazers_count": 1,
      "watchers_count": 1,
      "has_discussions": false,
      "forks_count": 1,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 1,
      "watchers": 1,
      "score": 0,
      "subscribers_count": 2
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 362151453,
      "name": "CVE-2020-1938",
      "full_name": "streghstreek/CVE-2020-1938",
      "owner": {
        "login": "streghstreek",
        "id": 71115159,
        "avatar_url": "https://avatars.githubusercontent.com/u/71115159?v=4",
        "html_url": "https://github.com/streghstreek",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/streghstreek/CVE-2020-1938",
      "description": "",
      "fork": false,
      "created_at": "2021-04-27T14:57:30Z",
      "updated_at": "2021-04-27T15:01:11Z",
      "pushed_at": "2021-04-27T14:58:39Z",
      "stargazers_count": 1,
      "watchers_count": 1,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 1,
      "score": 0,
      "subscribers_count": 0
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242083141,
      "name": "CVE-2020-1938-Tomact-file_include-file_read",
      "full_name": "sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read",
      "owner": {
        "login": "sv3nbeast",
        "id": 55974091,
        "avatar_url": "https://avatars.githubusercontent.com/u/55974091?v=4",
        "html_url": "https://github.com/sv3nbeast",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read",
      "description": "Tomcat的文件包含及文件读取漏洞利用POC",
      "fork": false,
      "created_at": "2020-02-21T07:48:50Z",
      "updated_at": "2025-03-18T10:37:28Z",
      "pushed_at": "2020-02-21T10:19:52Z",
      "stargazers_count": 53,
      "watchers_count": 53,
      "has_discussions": false,
      "forks_count": 19,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 19,
      "watchers": 53,
      "score": 0,
      "subscribers_count": 3
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 565419626,
      "name": "AttackTomcat",
      "full_name": "tpt11fb/AttackTomcat",
      "owner": {
        "login": "tpt11fb",
        "id": 80188324,
        "avatar_url": "https://avatars.githubusercontent.com/u/80188324?v=4",
        "html_url": "https://github.com/tpt11fb",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/tpt11fb/AttackTomcat",
      "description": "Tomcat常见漏洞GUI利用工具。CVE-2017-12615 PUT文件上传漏洞、tomcat-pass-getshell 弱认证部署war包、弱口令爆破、CVE-2020-1938 Tomcat AJP文件读取/包含",
      "fork": false,
      "created_at": "2022-11-13T11:01:41Z",
      "updated_at": "2025-04-29T03:56:58Z",
      "pushed_at": "2022-11-15T09:05:50Z",
      "stargazers_count": 228,
      "watchers_count": 228,
      "has_discussions": false,
      "forks_count": 18,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 18,
      "watchers": 228,
      "score": 0,
      "subscribers_count": 4
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 244069452,
      "name": "CVE-2020-1938-Clean-Version",
      "full_name": "w4fz5uck5/CVE-2020-1938-Clean-Version",
      "owner": {
        "login": "w4fz5uck5",
        "id": 32375656,
        "avatar_url": "https://avatars.githubusercontent.com/u/32375656?v=4",
        "html_url": "https://github.com/w4fz5uck5",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/w4fz5uck5/CVE-2020-1938-Clean-Version",
      "description": "CVE-2020-1938(GhostCat) clean and readable code version",
      "fork": false,
      "created_at": "2020-03-01T01:45:23Z",
      "updated_at": "2024-08-12T19:58:15Z",
      "pushed_at": "2023-09-12T13:07:16Z",
      "stargazers_count": 6,
      "watchers_count": 6,
      "has_discussions": false,
      "forks_count": 5,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 5,
      "watchers": 6,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 244516769,
      "name": "GhostCat-LFI-exp",
      "full_name": "whatboxapp/GhostCat-LFI-exp",
      "owner": {
        "login": "whatboxapp",
        "id": 50134632,
        "avatar_url": "https://avatars.githubusercontent.com/u/50134632?v=4",
        "html_url": "https://github.com/whatboxapp",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/whatboxapp/GhostCat-LFI-exp",
      "description": "CVE-2020-1938",
      "fork": false,
      "created_at": "2020-03-03T01:49:54Z",
      "updated_at": "2020-03-03T01:49:56Z",
      "pushed_at": "2020-02-22T05:23:53Z",
      "stargazers_count": 0,
      "watchers_count": 0,
      "has_discussions": false,
      "forks_count": 7,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 7,
      "watchers": 0,
      "score": 0,
      "subscribers_count": 0
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 242163769,
      "name": "CVE-2020-1938TomcatAjpScanner",
      "full_name": "woaiqiukui/CVE-2020-1938TomcatAjpScanner",
      "owner": {
        "login": "woaiqiukui",
        "id": 49117752,
        "avatar_url": "https://avatars.githubusercontent.com/u/49117752?v=4",
        "html_url": "https://github.com/woaiqiukui",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/woaiqiukui/CVE-2020-1938TomcatAjpScanner",
      "description": "批量扫描TomcatAJP漏洞",
      "fork": false,
      "created_at": "2020-02-21T14:55:40Z",
      "updated_at": "2024-08-12T19:57:58Z",
      "pushed_at": "2020-02-22T01:58:22Z",
      "stargazers_count": 15,
      "watchers_count": 15,
      "has_discussions": false,
      "forks_count": 2,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 2,
      "watchers": 15,
      "score": 0,
      "subscribers_count": 1
    },
    {
      "cveId": "CVE-2020-1938",
      "id": 241940286,
      "name": "CVE-2020-1938",
      "full_name": "xindongzhuaizhuai/CVE-2020-1938",
      "owner": {
        "login": "xindongzhuaizhuai",
        "id": 18646159,
        "avatar_url": "https://avatars.githubusercontent.com/u/18646159?v=4",
        "html_url": "https://github.com/xindongzhuaizhuai",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/xindongzhuaizhuai/CVE-2020-1938",
      "description": "",
      "fork": false,
      "created_at": "2020-02-20T17:00:02Z",
      "updated_at": "2025-02-22T06:34:46Z",
      "pushed_at": "2020-03-02T20:25:35Z",
      "stargazers_count": 45,
      "watchers_count": 45,
      "has_discussions": false,
      "forks_count": 38,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 38,
      "watchers": 45,
      "score": 0,
      "subscribers_count": 1
    }
  ],
  "nuclei": [
    {
      "cveId": "CVE-2020-1938",
      "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/network/cves/2020/CVE-2020-1938.yaml",
      "template_path": "network/cves/2020/CVE-2020-1938.yaml",
      "added_at": "2023-04-27T09:58:59Z"
    }
  ],
  "metasploit": [
    {
      "cveId": "CVE-2020-1938",
      "url": "https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/admin/http/tomcat_ghostcat.rb",
      "template_path": "modules/auxiliary/admin/http/tomcat_ghostcat.rb",
      "added_at": "2020-11-16T20:57:13Z"
    }
  ],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/00theway/Ghostcat-CNVD-2020-10487",
      "added_at": "2020-02-22T16:16:20Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/DaemonShao/CVE-2020-1938",
      "added_at": "2020-02-21T04:34:40Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/GhostTroops/TOP",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Hancheng-Lei/Hacking-Vulnerability-CVE-2020-1938-Ghostcat",
      "added_at": "2021-03-28T03:30:44Z",
      "score": 0.16,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/I-Runtime-Error/CVE-2020-1938",
      "added_at": "2020-05-12T15:54:28Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Just1ceP4rtn3r/CVE-2020-1938-Tool",
      "added_at": "2020-03-20T09:29:18Z",
      "score": 0.03,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/MateoSec/ghostcatch",
      "added_at": "2020-07-17T23:34:47Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Mr-xn/Penetration_Testing_POC",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Neko-chanQwQ/CVE-2020-1938",
      "added_at": "2021-07-11T14:38:21Z",
      "score": 0.01,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/NyxAzrael/Goby_POC",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Threekiii/Awesome-POC",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Umesh2807/Ghostcat",
      "added_at": "2020-05-12T18:03:59Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/WHtig3r/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Warelock/cve-2020-1938",
      "added_at": "2024-04-14T04:10:41Z",
      "score": 0.02,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/YounesTasra-R4z3rSw0rd/CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.03,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/Zaziki1337/Ghostcat-CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/acodervic/CVE-2020-1938-MSF-MODULE",
      "added_at": "2021-02-01T01:59:17Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/bkfish/CNVD-2020-10487-Tomcat-Ajp-lfi-Scanner",
      "added_at": "2020-02-20T21:00:15Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/dacade/CVE-2020-1938",
      "added_at": "2020-02-21T09:56:19Z",
      "score": 0.09,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/delsadan/CNVD-2020-10487-Bulk-verification",
      "added_at": "2020-02-22T13:25:57Z",
      "score": 0.03,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/doggycheng/CNVD-2020-10487",
      "added_at": "2020-03-27T08:33:28Z",
      "score": 0.08,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/einzbernnn/CVE-2020-1938Scan",
      "added_at": "2021-10-08T04:20:43Z",
      "score": 0.01,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/erickrr-bd/Apache-Tomcat-Ghostcat-Vulnerability",
      "added_at": "2025-02-24T17:34:21Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/fairyming/CVE-2020-1938",
      "added_at": "2020-02-21T08:42:50Z",
      "score": 0.11,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/fatal0/tomcat-cve-2020-1938-check",
      "added_at": "2020-02-21T17:24:45Z",
      "score": 0.07,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/h7hac9/CVE-2020-1938",
      "added_at": "2020-02-21T04:34:40Z",
      "score": 0.02,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/hopsypopsy8/CVE-2020-1938-Exploitation",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/jptr218/ghostcat",
      "added_at": "2021-08-14T17:32:51Z",
      "score": 0.01,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/laolisafe/CVE-2020-1938",
      "added_at": "2020-02-21T02:36:37Z",
      "score": 0.37,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/lizhianyuguangming/TomcatScanPro",
      "added_at": "2024-08-29T06:38:16Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/lizhianyuguangming/TomcatWeakPassChecker",
      "added_at": "2024-08-29T06:38:16Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/n0-traces/cve_monitor",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/nibiwodong/CNVD-2020-10487-Tomcat-ajp-POC",
      "added_at": "2020-02-20T17:57:54Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/projectdiscovery/nuclei-templates/blob/main/network/cves/2020/CVE-2020-1938.yaml",
      "added_at": "2023-04-27T09:58:59Z",
      "score": 1,
      "template_for": "nuclei"
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/qazbnm456/awesome-cve-poc",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/admin/http/tomcat_ghostcat.rb",
      "added_at": "2020-11-16T20:57:13Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/s3nd3rjz/poc-CVE-2020-1938",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/sgdream/CVE-2020-1938",
      "added_at": "2020-02-20T17:12:14Z",
      "score": 0.02,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/shaunmclernon/ghostcat-verification",
      "added_at": "2020-02-26T14:40:12Z",
      "score": 0.01,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/streghstreek/CVE-2020-1938",
      "added_at": "2021-04-27T14:57:30Z",
      "score": 0.01,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read",
      "added_at": "2020-02-21T07:48:50Z",
      "score": 0.53,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/technicalcorp2/CVE-2020-1938-Exploit",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/tpt11fb/AttackTomcat",
      "added_at": "2022-11-13T11:01:41Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/w4fz5uck5/CVE-2020-1938-Clean-Version",
      "added_at": "2020-03-01T01:45:23Z",
      "score": 0.06,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/whatboxapp/GhostCat-LFI-exp",
      "added_at": "2020-03-03T01:49:54Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/woaiqiukui/CVE-2020-1938TomcatAjpScanner",
      "added_at": "2020-02-21T14:55:40Z",
      "score": 0.15,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/xindongzhuaizhuai/CVE-2020-1938",
      "added_at": "2020-02-20T17:00:02Z",
      "score": 0.45,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://github.com/ze0r/GhostCat-LFI-exp",
      "added_at": "2020-02-22T05:17:09Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://lists.apache.org/thread.html/rad36ec6a1ffc9e43266b030c22ceeea569243555d34fb4187ff08522%40%3Cnotifications.ofbiz.apache.org%3E",
      "added_at": "2024-07-24T14:23:00Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://www.chaitin.cn/en/ghostcat",
      "added_at": "2020-06-26T00:00:00Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://www.exploit-db.com/exploits/48143",
      "added_at": "2020-02-20T00:00:00Z",
      "score": 0.5,
      "template_for": ""
    },
    {
      "cve": "CVE-2020-1938",
      "url": "https://www.exploit-db.com/exploits/49039",
      "added_at": "2020-11-13T00:00:00Z",
      "score": 1,
      "template_for": ""
    }
  ]
}
