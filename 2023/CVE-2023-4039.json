{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2023-4039",
      "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2023-4039",
      "reportURL": "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
      "timeStamp": "2023-09-14T20:01:00Z"
    },
    {
      "id": "CVE-2023-4039",
      "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2023-4039",
      "reportURL": "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf",
      "timeStamp": "2023-09-14T20:01:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2023-4039",
      "url": "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf",
      "added_at": "2023-09-23T10:56:34Z"
    }
  ],
  "nomisec": [],
  "nuclei": [],
  "metasploit": [],
  "holloways": [
    {
      "cve": "CVE-2023-4039",
      "url": "https://www.cve.news/cve-2023-4039/",
      "added_at": "2023-10-31T00:00:00Z",
      "score": 1,
      "template_for": ""
    }
  ],
  "openpoc": [
    {
      "cve": "CVE-2023-4039",
      "url": "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
      "added_at": "2023-09-14T20:01:00Z",
      "score": 0,
      "template_for": ""
    },
    {
      "cve": "CVE-2023-4039",
      "url": "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf",
      "added_at": "2023-09-14T20:01:00Z",
      "score": 0.4,
      "template_for": ""
    },
    {
      "cve": "CVE-2023-4039",
      "url": "https://www.cve.news/cve-2023-4039/",
      "added_at": "2023-10-31T00:00:00Z",
      "score": 1,
      "template_for": ""
    }
  ]
}
