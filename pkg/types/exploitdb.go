package types

import (
	"fmt"
	"path/filepath"
	"time"
)

type ExploitDB struct {
	Cve string `json:"cve"`

	Id   string `json:"id"`
	File string `json:"file"`

	Description    string `json:"description"`
	Author         string `json:"author"`
	ApplicationURL string `json:"application_url"`
	SourceURL      string `json:"source_url"`
	Screenshot     string `json:"screenshot"`
	Verified       bool   `json:"verified"`

	Codes    string `json:"codes"`
	Tags     string `json:"tags"`
	Type     string `json:"type"`
	Platform string `json:"platform"`
	Port     string `json:"port"`
	Aliases  string `json:"aliases"`

	DateAdded     time.Time `json:"date_added"`
	DateUpdated   time.Time `json:"date_updated"`
	DatePublished time.Time `json:"date_published"`
}

func (e *ExploitDB) GetCve() string {
	return e.Cve
}

func (e *ExploitDB) GetURL() string {
	return fmt.Sprintf("https://www.exploit-db.com/exploits/%s", filepath.Base(e.Id))
}

func (e *ExploitDB) GetPublishDate() time.Time {
	return e.DatePublished
}

func (e *ExploitDB) GetTrustScore() float64 {
	if e.Verified {
		return 1.0
	} else {
		return 0.5
	}
}

func (e *ExploitDB) GetTemplateFor() string {
	return ""
}
