{
  "exploitdb": [],
  "itw": [
    {
      "id": "CVE-2017-17917",
      "description": "SQL injection vulnerability in the 'where' method in Ruby on Rails 5.1.4 and earlier allows remote attackers to execute arbitrary SQL commands via the 'id' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2017-17917",
      "reportURL": "https://kay-malwarebenchmark.github.io/blog/ruby-on-rails-arbitrary-sql-injection/",
      "timeStamp": "2018-01-10T15:18:00Z"
    }
  ],
  "trickest": [],
  "nomisec": [
    {
      "cveId": "CVE-2017-17917",
      "id": 745226621,
      "name": "rails-cve-2017-17917",
      "full_name": "matiasarenhard/rails-cve-2017-17917",
      "owner": {
        "login": "matiasarenhard",
        "id": 14844393,
        "avatar_url": "https://avatars.githubusercontent.com/u/14844393?v=4",
        "html_url": "https://github.com/matiasarenhard",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/matiasarenhard/rails-cve-2017-17917",
      "description": "",
      "fork": false,
      "created_at": "2024-01-18T22:12:54Z",
      "updated_at": "2024-02-04T19:48:18Z",
      "pushed_at": "2024-01-20T01:47:50Z",
      "stargazers_count": 1,
      "watchers_count": 1,
      "has_discussions": false,
      "forks_count": 0,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "watchers": 1,
      "score": 0,
      "subscribers_count": 1
    }
  ],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2017-17917",
      "url": "https://github.com/matiasarenhard/rails-cve-2017-17917",
      "added_at": "2024-01-18T22:12:54Z",
      "score": 0.01,
      "template_for": ""
    },
    {
      "cve": "CVE-2017-17917",
      "url": "https://kay-malwarebenchmark.github.io/blog/ruby-on-rails-arbitrary-sql-injection/",
      "added_at": "2018-01-10T15:18:00Z",
      "score": 0,
      "template_for": ""
    }
  ]
}
