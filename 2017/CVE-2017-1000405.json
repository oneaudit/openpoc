{
  "exploitdb": [
    {
      "cve": "CVE-2017-1000405",
      "id": "43199",
      "file": "exploits/linux/dos/43199.c",
      "description": "Linux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (1)",
      "author": "Bindecy",
      "application_url": "",
      "source_url": "https://github.com/bindecy/HugeDirtyCowPOC/blob/ee7476d9a2049d7ac2e0d05b5d1e68930305c8ae/main.c",
      "screenshot": "",
      "verified": false,
      "codes": "CVE-2017-1000405",
      "tags": "",
      "type": "dos",
      "platform": "linux",
      "port": "",
      "aliases": "Huge Dirty Cow",
      "date_added": "2017-11-30T00:00:00Z",
      "date_updated": "2018-03-19T00:00:00Z",
      "date_published": "2017-11-30T00:00:00Z"
    },
    {
      "cve": "CVE-2017-1000405",
      "id": "44305",
      "file": "exploits/linux/dos/44305.c",
      "description": "Linux Kernel - 'The Huge Dirty Cow' Overwriting The Huge Zero Page (2)",
      "author": "anonymous",
      "application_url": "",
      "source_url": "https://github.com/hardenedlinux/offensive_poc/blob/99c6b0b540d5550d757315aa0cb8f8edf0c41e2f/CVE-2017-1000405/huge_dirty_cow.c",
      "screenshot": "",
      "verified": false,
      "codes": "CVE-2017-1000405",
      "tags": "",
      "type": "dos",
      "platform": "linux",
      "port": "",
      "aliases": "",
      "date_added": "2018-03-19T00:00:00Z",
      "date_updated": "2018-03-19T00:00:00Z",
      "date_published": "2017-12-11T00:00:00Z"
    }
  ],
  "itw": [
    {
      "id": "CVE-2017-1000405",
      "description": "The Linux Kernel versions 2.6.38 through 4.14 have a problematic use of pmd_mkdirty() in the touch_pmd() function inside the THP implementation. touch_pmd() can be reached by get_user_pages(). In such case, the pmd will become dirty. This scenario breaks the new can_follow_write_pmd()'s logic - pmd can become dirty without going through a COW cycle. This bug is not as severe as the original \"Dirty cow\" because an ext4 file (or any other regular file) cannot be mapped using THP. Nevertheless, it does allow us to overwrite read-only huge pages. For example, the zero huge page and sealed shmem files can be overwritten (since their mapping can be populated using THP). Note that after the first write page-fault to the zero page, it will be replaced with a new fresh (and zeroed) thp.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000405",
      "reportURL": "https://github.com/bindecy/HugeDirtyCowPOC",
      "timeStamp": "2017-11-29T22:19:51Z"
    },
    {
      "id": "CVE-2017-1000405",
      "description": "The Linux Kernel versions 2.6.38 through 4.14 have a problematic use of pmd_mkdirty() in the touch_pmd() function inside the THP implementation. touch_pmd() can be reached by get_user_pages(). In such case, the pmd will become dirty. This scenario breaks the new can_follow_write_pmd()'s logic - pmd can become dirty without going through a COW cycle. This bug is not as severe as the original \"Dirty cow\" because an ext4 file (or any other regular file) cannot be mapped using THP. Nevertheless, it does allow us to overwrite read-only huge pages. For example, the zero huge page and sealed shmem files can be overwritten (since their mapping can be populated using THP). Note that after the first write page-fault to the zero page, it will be replaced with a new fresh (and zeroed) thp.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000405",
      "reportURL": "https://medium.com/bindecy/huge-dirty-cow-cve-2017-1000405-110eca132de0",
      "timeStamp": "2020-06-26T00:00:00Z"
    },
    {
      "id": "CVE-2017-1000405",
      "description": "The Linux Kernel versions 2.6.38 through 4.14 have a problematic use of pmd_mkdirty() in the touch_pmd() function inside the THP implementation. touch_pmd() can be reached by get_user_pages(). In such case, the pmd will become dirty. This scenario breaks the new can_follow_write_pmd()'s logic - pmd can become dirty without going through a COW cycle. This bug is not as severe as the original \"Dirty cow\" because an ext4 file (or any other regular file) cannot be mapped using THP. Nevertheless, it does allow us to overwrite read-only huge pages. For example, the zero huge page and sealed shmem files can be overwritten (since their mapping can be populated using THP). Note that after the first write page-fault to the zero page, it will be replaced with a new fresh (and zeroed) thp.",
      "referenceURL": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000405",
      "reportURL": "https://www.exploit-db.com/exploits/43199",
      "timeStamp": "2018-02-13T02:29:00Z"
    }
  ],
  "trickest": [
    {
      "id": "CVE-2017-1000405",
      "url": "https://github.com/qazbnm456/awesome-cve-poc",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2017-1000405",
      "url": "https://github.com/xairy/linux-kernel-exploitation",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2017-1000405",
      "url": "https://medium.com/bindecy/huge-dirty-cow-cve-2017-1000405-110eca132de0",
      "added_at": "2022-02-10T19:32:13Z"
    },
    {
      "id": "CVE-2017-1000405",
      "url": "https://www.exploit-db.com/exploits/43199",
      "added_at": "2022-02-10T19:32:13Z"
    }
  ],
  "nomisec": [
    {
      "cveId": "CVE-2017-1000405",
      "id": 112534496,
      "name": "HugeDirtyCowPOC",
      "full_name": "bindecy/HugeDirtyCowPOC",
      "owner": {
        "login": "bindecy",
        "id": 33990073,
        "avatar_url": "https://avatars.githubusercontent.com/u/33990073?v=4",
        "html_url": "https://github.com/bindecy",
        "user_view_type": "public"
      },
      "html_url": "https://github.com/bindecy/HugeDirtyCowPOC",
      "description": "A POC for the Huge Dirty Cow vulnerability (CVE-2017-1000405)",
      "fork": false,
      "created_at": "2017-11-29T22:19:51Z",
      "updated_at": "2025-04-10T15:54:59Z",
      "pushed_at": "2017-11-30T00:24:14Z",
      "stargazers_count": 201,
      "watchers_count": 201,
      "has_discussions": false,
      "forks_count": 62,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 62,
      "watchers": 201,
      "score": 0,
      "subscribers_count": 5
    }
  ],
  "nuclei": [],
  "metasploit": [],
  "holloways": [],
  "openpoc": [
    {
      "cve": "CVE-2017-1000405",
      "url": "https://github.com/bindecy/HugeDirtyCowPOC",
      "added_at": "2017-11-29T22:19:51Z",
      "score": 1,
      "template_for": ""
    },
    {
      "cve": "CVE-2017-1000405",
      "url": "https://github.com/qazbnm456/awesome-cve-poc",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2017-1000405",
      "url": "https://github.com/xairy/linux-kernel-exploitation",
      "added_at": "2022-02-10T19:32:13Z",
      "score": 0.9,
      "template_for": ""
    },
    {
      "cve": "CVE-2017-1000405",
      "url": "https://medium.com/bindecy/huge-dirty-cow-cve-2017-1000405-110eca132de0",
      "added_at": "2020-06-26T00:00:00Z",
      "score": 0.7,
      "template_for": ""
    },
    {
      "cve": "CVE-2017-1000405",
      "url": "https://www.exploit-db.com/exploits/43199",
      "added_at": "2017-11-30T00:00:00Z",
      "score": 0.5,
      "template_for": ""
    },
    {
      "cve": "CVE-2017-1000405",
      "url": "https://www.exploit-db.com/exploits/44305",
      "added_at": "2017-12-11T00:00:00Z",
      "score": 0.5,
      "template_for": ""
    }
  ]
}
